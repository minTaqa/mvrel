#!/usr/bin/bats --tap
# -*- mode: sh; -*-

# 22 Feb 2019

browser () {
    # ad libitum
    urxvt -e bash >/dev/null 2>&1
}

streq () {
    if test "x$1" = "x$2"; then true
    else >&2 echo streq: "$1" was not equal to "$2"; false
    fi
}

# TODO
# \- now test single link
# \- test strange characters
# - test (implement) destination not directory
# - test (implement) multiple sources

TMPD=
setup () {
    export PATH=$(dirname $0)"/..":$PATH

    TMPD=$(mktemp -d trash-t-mvrel.XXXXXX --tmpdir)
    if [ $BATS_TEST_NUMBER = 1 ]; then
        # tell user how to clean up
        >&3 echo "Writing to $TMPD"
        >&3 echo "Using "$(which mvrel)
    fi
    cd $TMPD
}

basic_dirs () {
    mkdir foo
    touch bar
    ln -sr bar foo/
    touch foo/flob
    ln -sr foo/flob foo/qux
    mkdir baz
}


@test "mvrel in PATH" {
    which mvrel
}

@test "fails on bad arguments" {
    basic_dirs
    ! mvrel
    ! mvrel foo
    # directory into file
    ! mvrel foo bar
    # directory into itself
    ! mvrel foo foo
    # directory into subdirectory
    mkdir foo/b
    ! mvrel foo foo/b
    mvrel foo foo/../baz
}

@test "test the setup" {
    basic_dirs
    test -d foo
    test -f bar
    test -f foo/bar
    test -f foo/flob
    streq $(readlink foo/bar) "../bar"
    streq $(readlink foo/qux) "flob"
    test -d baz
    streq $(ls baz) ""
    mvrel foo baz
    streq $(readlink baz/foo/bar) "../../bar"
    streq $(readlink baz/foo/qux) "flob"

    # move the directory higher
    mvrel baz/foo .
    streq $(readlink foo/bar) "../bar"

    # put it back
    mvrel foo baz

    # multiple levels (XXX should test this more)
    mkdir joe
    mvrel baz joe
    streq $(readlink joe/baz/foo/bar) "../../../bar"
    rm -rf baz joe bar
}

@test "test moving a symlink" {
    basic_dirs
    ln -s bar fred
    mvrel fred baz
    streq $(readlink baz/fred) "../bar"
    ln -s baz/fred tom
    mvrel foo baz

    # also test link to a link
    mvrel tom baz/foo
    streq $(readlink baz/foo/tom) "../fred"
}

strange_dirs_test () {
    FOO=${1:-foo}
    BAR=${2:-bar}
    BAZ=${3:-baz}
    FLOB=${4:-flob}
    QUX=${5:-qux}
    >&2 echo "FOO=$FOO BAR=$BAR BAZ=$BAZ FLOB=$FLOB QUX=$QUX"
    mkdir -- "$FOO"
    touch -- "$BAR"
    ln -sr -- "$BAR" "$FOO"
    touch -- "$FOO/$FLOB"
    ln -sr -- "$FOO/$FLOB" "$FOO/$QUX"
    mkdir -- "$BAZ"
    test -d "$FOO"
    test -f "$BAR"
    test -f "$FOO/$BAR"
    test -f "$FOO/$FLOB"
    streq "$(readlink -- "$FOO/$BAR"; echo x)" "../$BAR"$'\nx'
    streq "$(readlink -- "$FOO/$QUX"; echo x)" "$FLOB"$'\nx'
    test -d "$BAZ"
    streq $(ls -- "$BAZ") ""
    mvrel "$FOO" "$BAZ"
    streq "$(readlink -- "$BAZ/$FOO/$BAR"; echo x)" "../../$BAR"$'\nx'
    streq "$(readlink -- "$BAZ/$FOO/$QUX"; echo x)" "$FLOB"$'\nx'
    rm -rf -- "$BAZ" "$BAR"
}

@test "test strange chars" {
    strange_dirs_test $'foo\n' "bar" "baz" "flob" "qux"
    strange_dirs_test $'foo\n' $'bar\n' $'baz\n' $'flob\n' $'qux\n'
    strange_dirs_test "foo\n" "bar\n" "baz\n" "flob\n" "qux\n"

    str=$'\n*\\  -&%#'
    strange_dirs_test "--foo$str" "--bar$str" "--baz$str" "--flob$str" "--qux$str"
    # example from https://raw.githubusercontent.com/l0b0/tilde/master/examples/safe-find.sh
    str=$'--$`!*@\a\b\E\f\r\t\v\\\'"\360\240\202\211 \n'
    strange_dirs_test "--foo$str" "--bar$str" "--baz$str" "--flob$str" "--qux$str"
    strange_dirs_test "*F:OO&"$'\n'"\n*" "-&&b&*ar"$'\n'"&&%^\$" "-baz\\a:z"$'\n\n' "-&fl\nob" "-Q:*:UX"$'\n'
}


teardown () {
    rm -rf $TMPD
}

